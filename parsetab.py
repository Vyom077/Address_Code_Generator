
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN COMMA DIVIDE ID INT LBRACE LPAREN MINUS NUMBER PLUS PRINT RBRACE RETURN RPAREN SEMI TIMESprogram : function_listfunction_list : function_list function\n                     | functionfunction : INT ID LPAREN params RPAREN LBRACE declarations statements RBRACEparams : param_list\n              | emptyparam_list : param_list COMMA param\n                  | paramparam : INT IDdeclarations : declarations declaration\n                    | emptydeclaration : INT ID ASSIGN expression SEMI\n                   | INT ID SEMIstatements : statements statement\n                  | emptystatement : ID ASSIGN expression SEMI\n                | PRINT LPAREN expression RPAREN SEMIstatement : RETURN expression SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : IDexpression : ID LPAREN arguments RPARENarguments : arguments COMMA expression\n                | expressionempty :'
    
_lr_action_items = {'INT':([0,2,3,5,7,15,16,18,19,22,26,31,48,],[4,4,-3,-2,8,8,-29,20,-11,-10,-4,-13,-12,]),'$end':([1,2,3,5,26,],[0,-1,-3,-2,-4,]),'ID':([4,8,16,18,19,20,21,22,23,27,29,30,31,32,33,35,41,42,43,44,45,47,48,49,58,60,],[6,13,-29,-29,-11,24,25,-10,-15,-14,37,37,-13,37,37,37,-18,37,37,37,37,37,-12,-16,-17,37,]),'LPAREN':([6,28,29,30,32,33,35,37,42,43,44,45,47,60,],[7,33,35,35,35,35,35,47,35,35,35,35,35,35,]),'RPAREN':([7,9,10,11,12,13,17,36,37,40,46,51,52,53,54,55,56,57,59,61,],[-29,14,-5,-6,-8,-9,-7,-24,-25,50,55,-19,-20,-21,-22,-23,59,-28,-26,-27,]),'COMMA':([10,12,13,17,36,37,51,52,53,54,55,56,57,59,61,],[15,-8,-9,-7,-24,-25,-19,-20,-21,-22,-23,60,-28,-26,-27,]),'LBRACE':([14,],[16,]),'RBRACE':([16,18,19,21,22,23,27,31,41,48,49,58,],[-29,-29,-11,26,-10,-15,-14,-13,-18,-12,-16,-17,]),'PRINT':([16,18,19,21,22,23,27,31,41,48,49,58,],[-29,-29,-11,28,-10,-15,-14,-13,-18,-12,-16,-17,]),'RETURN':([16,18,19,21,22,23,27,31,41,48,49,58,],[-29,-29,-11,29,-10,-15,-14,-13,-18,-12,-16,-17,]),'ASSIGN':([24,25,],[30,32,]),'SEMI':([24,34,36,37,38,39,50,51,52,53,54,55,59,],[31,41,-24,-25,48,49,58,-19,-20,-21,-22,-23,-26,]),'NUMBER':([29,30,32,33,35,42,43,44,45,47,60,],[36,36,36,36,36,36,36,36,36,36,36,]),'PLUS':([34,36,37,38,39,40,46,51,52,53,54,55,57,59,61,],[42,-24,-25,42,42,42,42,-19,-20,-21,-22,-23,42,-26,42,]),'MINUS':([34,36,37,38,39,40,46,51,52,53,54,55,57,59,61,],[43,-24,-25,43,43,43,43,-19,-20,-21,-22,-23,43,-26,43,]),'TIMES':([34,36,37,38,39,40,46,51,52,53,54,55,57,59,61,],[44,-24,-25,44,44,44,44,44,44,-21,-22,-23,44,-26,44,]),'DIVIDE':([34,36,37,38,39,40,46,51,52,53,54,55,57,59,61,],[45,-24,-25,45,45,45,45,45,45,-21,-22,-23,45,-26,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,],[2,]),'function':([0,2,],[3,5,]),'params':([7,],[9,]),'param_list':([7,],[10,]),'empty':([7,16,18,],[11,19,23,]),'param':([7,15,],[12,17,]),'declarations':([16,],[18,]),'statements':([18,],[21,]),'declaration':([18,],[22,]),'statement':([21,],[27,]),'expression':([29,30,32,33,35,42,43,44,45,47,60,],[34,38,39,40,46,51,52,53,54,57,61,]),'arguments':([47,],[56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',76),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',80),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',81),
  ('function -> INT ID LPAREN params RPAREN LBRACE declarations statements RBRACE','function',9,'p_function','parser.py',88),
  ('params -> param_list','params',1,'p_params','parser.py',93),
  ('params -> empty','params',1,'p_params','parser.py',94),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',98),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',99),
  ('param -> INT ID','param',2,'p_param','parser.py',106),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','parser.py',110),
  ('declarations -> empty','declarations',1,'p_declarations','parser.py',111),
  ('declaration -> INT ID ASSIGN expression SEMI','declaration',5,'p_declaration','parser.py',115),
  ('declaration -> INT ID SEMI','declaration',3,'p_declaration','parser.py',116),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',123),
  ('statements -> empty','statements',1,'p_statements','parser.py',124),
  ('statement -> ID ASSIGN expression SEMI','statement',4,'p_statement_expr','parser.py',128),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_expr','parser.py',129),
  ('statement -> RETURN expression SEMI','statement',3,'p_statement_return','parser.py',137),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',141),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',142),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',143),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',144),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',152),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',156),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',162),
  ('expression -> ID LPAREN arguments RPAREN','expression',4,'p_expression_call','parser.py',166),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments','parser.py',174),
  ('arguments -> expression','arguments',1,'p_arguments','parser.py',175),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',182),
]
